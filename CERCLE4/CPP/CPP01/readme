ğŸ§  RÃ©capitulatif â€“ C++ Module 01
ğŸ”¹ ex00 â€“ BraiiiiiiinnnzzzZ
Objectif :
Apprendre Ã  crÃ©er une classe simple (Zombie) avec un attribut privÃ©, un constructeur, un destructeur, une mÃ©thode announce(), et distinguer allocation pile vs tas.
âœ… Concepts clÃ©s : classe, constructeur, destructeur, new/delete, Zombie* vs Zombie.

ğŸ”¹ ex01 â€“ Moar brainz!
Objectif :
CrÃ©er un tableau dynamique de zombies avec new[], leur attribuer un nom, les faire sâ€™annoncer, puis les dÃ©truire correctement.
âœ… Concepts clÃ©s : tableau dynamique dâ€™objets, new[], delete[], boucle et mÃ©thode setName().

ğŸ”¹ ex02 â€“ HI THIS IS BRAIN
Objectif :
Comprendre la diffÃ©rence entre une variable, un pointeur vers cette variable, et une rÃ©fÃ©rence Ã  cette variable, en observant les adresses mÃ©moire et les valeurs.
âœ… Concepts clÃ©s : &, *, std::string&, std::string*, affichage des adresses.

ğŸ”¹ ex03 â€“ Unnecessary violence
Objectif :
Utiliser des objets comme attributs d'autres classes, en comprenant la diffÃ©rence entre les rÃ©fÃ©rences obligatoires (HumanA toujours armÃ©) et les pointeurs optionnels (HumanB peut Ãªtre dÃ©sarmÃ©).
âœ… Concepts clÃ©s : composition dâ€™objet, rÃ©fÃ©rence vs pointeur, mÃ©thode attack().

ğŸ”¹ ex04 â€“ Sed is for losers
Objectif :
Lire un fichier, remplacer toutes les occurrences dâ€™une chaÃ®ne s1 par s2 dans son contenu, puis Ã©crire dans un nouveau fichier.
âœ… Concepts clÃ©s : std::ifstream, std::ofstream, std::string::find, gestion dâ€™erreurs, pas de replace().

ğŸ”¹ ex05 â€“ Harl 2.0
Objectif :
Utiliser un tableau de pointeurs vers fonctions membres pour appeler dynamiquement une mÃ©thode selon un niveau de plainte (DEBUG, INFO, etc.), sans if/else.
âœ… Concepts clÃ©s : pointeur sur mÃ©thode, void (Class::*)(), mapping string â†’ mÃ©thode.

ğŸ”¹ ex06 â€“ Harl filter
Objectif :
Filtrer les messages de Harl Ã  partir dâ€™un certain niveau avec un switch, en affichant tous les niveaux supÃ©rieurs.
âœ… Concepts clÃ©s : switch, cas enchaÃ®nÃ©s sans break, contrÃ´le de flux basÃ© sur une chaÃ®ne de niveau.

